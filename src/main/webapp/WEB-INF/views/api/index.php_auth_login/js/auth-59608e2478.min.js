angular.module("app", ["ngRoute", "template-app", "common.map", "app.map"]).config(["$locationProvider", function(e) {
	e.html5Mode(!0)
}]).run(["$rootScope", "geetestService", function(e, o) {
	e.HOST_CLIENT = HOST_CLIENT, e.HOST_BASE = HOST_BASE, e.$on("$routeChangeSuccess", function(e, t) {
		var n = t.$$route;
		if (n) {
			o.setGeetestProduct("popup");
			var a = ["/login", "/register/email"];
			a.indexOf(n.originalPath) > -1 && o.setGeetestProduct("float")
		}
	})
}]).run(["$rootScope", "utilService", "authMessageType", function(e, o, t) {
	e.close = function() {
		var e = {
			type: t.CLOSE
		};
		o.postMessageWithJson(e)
	}
}]);
angular.module("app.map", ["app.login.loginCtrl", "app.login.loginService", "app.login.loginRedirectCtrl", "app.login.loginOtherService", "app.register.registerEmailCtrl", "app.register.registerMobileCtrl", "app.register.registerService", "app.find.findMobileCtrl", "app.find.findEmailCtrl", "app.find.findEmailResultCtrl", "app.reset.resetCtrl", "app.reset.resetResultCtrl"]);
angular.module("common.map", ["common.configs.httpInterceptor", "common.configs.httpRequest", "common.configs.route", "common.config.template", "common.directives.geetest", "common.directives.inputRadio", "common.directives.inputCheckbox", "common.directives.messageEvent", "common.directives.dropDown", "common.directives.stopPropagation", "common.directives.enterSubmit", "common.directives.ad", "common.services.adService", "common.services.geetestService", "common.services.utilService", "common.services.checkService", "common.services.countdownService", "common.services.loginWeixinService", "common.services.loginQQService", "common.services.securityService"]);
angular.module("app.find.findEmailCtrl", []).controller("findEmailCtrl", ["$scope", "$q", "$location", "securityService", "geetestService", "checkService", "utilService", "authMessageType", "adService", function(e, i, a, n, r, t, c, l, o) {
	function f() {
		var e = t.checkEmail(d.email);
		return v.email = v.server = e.msg, e.valid
	}
	function m() {
		var e = {
			email: d.email
		},
			i = r.getGeetestValidate();
		return angular.extend(e, i)
	}
	function u(e) {
		g || (g = !0, n.findPasswordByEmail(e).then(function() {
			a.path("find/email/" + encodeURIComponent(e.email))
		}, function(e) {
			return s(e.data), i.reject(null)
		})["finally"](function() {
			g = !1, r.clearGeetestValidate()
		}))
	}
	function s(e) {
		var i = v.server = e.msg;
		switch (e.code) {
		case 1021:
			v.email = i
		}
	}
	e.adInfo = o.getAdInfoWithLogin();
	var d = e.submitInfo = {
		email: ""
	},
		v = e.errorInfo = {
			email: "",
			server: ""
		},
		g = !1;
	e.clearError = function(e) {
		v[e] = v.server = ""
	}, e.checkEmail = function() {
		var e = t.checkEmail(d.email);
		v.email = v.server = e.msg
	}, e.find = function() {
		var e = f();
		if (e) {
			var i = m();
			u(i)
		}
	}
}]);
angular.module("app.find.findEmailResultCtrl", []).controller("findEmailResultCtrl", ["$rootScope", "$scope", "$routeParams", "adService", function(o, e, l, n) {
	e.adInfo = n.getAdInfoWithLogin(), e.email = decodeURIComponent(l.email), e.close = function() {
		o.close()
	}
}]);
angular.module("app.find.findMobileCtrl", []).controller("findMobileCtrl", ["$scope", "$q", "$timeout", "$location", "securityService", "geetestService", "checkService", "utilService", "countdownService", "adService", function(e, n, o, t, r, c, i, a, d, u) {
	function s() {
		var e = i.checkPhone(l.phone);
		if (p.phone = p.server = e.msg, !e.valid) return !1;
		var n = i.checkRequire(l.code, "验证码");
		return p.code = p.server = n.msg, !! n.valid
	}
	function f() {
		var e = {
			phone: l.phone,
			code: l.code
		},
			n = c.getGeetestValidate();
		return angular.extend(e, n)
	}
	function h(e) {
		m || (m = !0, r.findPasswordByMobile(e).then(function(e) {
			t.path("reset/" + e.data.obj)
		}, function(e) {
			return v(e.data), n.reject(null)
		})["finally"](function() {
			m = !1, c.clearGeetestValidate()
		}))
	}
	function v(e) {
		var n = p.server = e.msg;
		switch (e.code) {
		case 1022:
		case 110007:
			p.phone = n;
			break;
		case 1018:
			p.code = n
		}
	}
	e.adInfo = u.getAdInfoWithLogin();
	var l = e.submitInfo = {
		phone: "",
		code: ""
	},
		p = e.errorInfo = {
			phone: "",
			code: "",
			server: ""
		},
		g = e.countInfo = {
			count: 0
		},
		m = !1;
	e.clearError = function(e) {
		p[e] = p.server = ""
	}, e.checkPhone = function() {
		var e = i.checkPhone(l.phone);
		p.phone = p.server = e.msg
	}, e.getResetCode = function() {
		var e = i.checkPhone(l.phone);
		if (p.phone = p.server = e.msg, e.valid) {
			var n = {
				phone: l.phone
			},
				o = c.getGeetestValidate();
			angular.extend(n, o), r.getResetCode(n).then(function() {
				d.setCount(g, 60)
			}, function(e) {
				v(e.data)
			})
		}
	}, e.find = function() {
		var e = s();
		if (e) {
			var n = f();
			h(n)
		}
	}
}]);
angular.module("app.login.loginCtrl", []).controller("loginCtrl", ["$rootScope", "$scope", "$q", "securityService", "geetestService", "utilService", "loginService", "loginOtherService", "authMessageType", "adService", "checkService", function(e, r, n, i, s, t, o, a, u, c, l) {
	function d() {
		var e = l.checkRequire(h.username, "帐号");
		if (p.username = p.server = e.msg, !e.valid) return !1;
		var r = l.checkRequire(h.password, "密码");
		if (p.password = p.server = r.msg, !r.valid) return !1;
		if (p.isValidateCodeLogin) {
			var n = s.getGeetestValidate();
			if (!n) return p.server = "图片验证码不能为空", !1
		}
		return !0
	}
	function f() {
		var e = {
			username: h.username,
			password: h.password,
			rememberMe: h.rememberMe
		};
		if (p.isValidateCodeLogin) {
			var r = s.getGeetestValidate();
			angular.extend(e, r)
		}
		return e
	}
	function g(e) {
		w || (w = !0, i.login(e).then(function() {
			var r = v.list.filter(function(r) {
				return r !== e.username
			});
			r.unshift(e.username), o.setRememberUsers(r);
			var n = {
				type: u.LOGIN
			};
			t.postMessageWithJson(n)
		}, function(e) {
			var r = e.data;
			return m(r), p.isValidateCodeLogin = r.map.isValidateCodeLogin, p.isValidateCodeLogin && (h.initGeetest = !0), n.reject(null)
		})["finally"](function() {
			w = !1, s.clearGeetestValidate()
		}))
	}
	function m(e) {
		var r = p.server = e.msg;
		switch (e.code) {
		case 1003:
		case 1007:
		case 110019:
			p.username = r;
			break;
		case 1004:
			p.password = r
		}
	}
	r.adInfo = c.getAdInfoWithLogin();
	var v = r.userInfo = {
		show: !1,
		list: o.getRememberUsers()
	};
	r.$watch("userInfo.list", function(e) {
		o.setRememberUsers(e)
	}, !0);
	var h = r.submitInfo = {
		username: v.list[0] || "",
		password: "",
		rememberMe: !0,
		initGeetest: !1
	},
		p = r.errorInfo = {
			username: "",
			password: "",
			server: "",
			isValidateCodeLogin: ""
		},
		w = !1;
	r.showUserInfo = function() {
		v.list && v.list.length && (v.show = !0)
	}, r.clearError = function(e) {
		p[e] = p.server = "", "username" === e && r.showUserInfo()
	}, r.hideUserInfo = function(e) {
		9 === e.keyCode && (v.show = !1)
	}, r.login = function() {
		var e = d();
		if (e) {
			var r = f();
			g(r)
		}
	}, r.loginOther = function(e) {
		a.openLoginWindow(e)
	}
}]);
angular.module("app.login.loginOtherService", []).factory("loginOtherService", ["$window", "$http", "loginWeixinService", "loginQQService", "utilService", "securityService", "authMessageType", function(e, t, n, i, o, r, c) {
	function a(t) {
		var o, r = redirect_uri;
		"qq" == t ? o = i.getQQUrl(r) : "weixin" == t && (o = n.getWxUrl(r));
		var c = (window.outerHeight - 600) / 2,
			a = (window.outerWidth - 600) / 2,
			s = ["width=600", "height=600", "top=" + c, "left=" + a];
		e.open(o, "_blank", s.join(","))
	}
	function s(e) {
		var t = {
			code: e,
			isMobile: 1
		};
		n.relateAccount(t).then(function() {
			var e = {
				type: c.LOGIN
			};
			o.postMessageWithJson(e)
		})
	}
	function u(e, t) {
		i.getQQOpenId(e).then(function(t) {
			var n = {
				type: "qq",
				openId: t.openid,
				accessToken: e
			};
			return i.relateAccount(n)
		}).then(function() {
			var e = {
				type: c.LOGIN
			};
			o.postMessageWithJson(e)
		})
	}
	function p(e) {
		"WEXIN_STATE" === e.state ? s(e.code) : "QQ_STATE" === e.state && u(e.access_token, e.expires_in)
	}
	return {
		openLoginWindow: a,
		setLoginRedirectParams: p
	}
}]);
angular.module("app.login.loginService", []).factory("loginService", function() {
	function e() {
		var e = [],
			r = localStorage.getItem("usersLoginInfo");
		if (r) try {
			r = JSON.parse(r), angular.forEach(r, function(r) {
				angular.isObject(r) ? e.push(r.username) : e.push(r)
			})
		} catch (n) {
			console.error(n)
		}
		return e
	}
	function r(e) {
		localStorage.setItem("usersLoginInfo", JSON.stringify(e))
	}
	return {
		getRememberUsers: e,
		setRememberUsers: r
	}
});
angular.module("app.login.loginRedirectCtrl", []).controller("loginRedirectCtrl", ["$location", "$window", "utilService", "authMessageType", function(e, o, l, t) {
	for (var i, n = /((\w+)=([^=&\?]*)&?)/g, a = window.location, r = {}; null != (i = n.exec(a));) r[i[2]] = i[3];
	var c = {
		type: t.LOGIN_REDIRECT,
		data: r
	};
	l.postMessageWithJson(c), o.close()
}]);
angular.module("template-app", []).run(["$templateCache", function(e) {
	e.put("app/error.tpl.html", '<div class="eqc-error"></div>'), e.put("app/find/findEmail.tpl.html", '<div class="eqc-view"><eqd-ad ad-info="adInfo"></eqd-ad><div class="eqc-form" eqd-enter-submit="#submit"><div class="header"><a class="title active" href="">邮箱找回</a> <a class="title" href="find/mobile">手机找回</a></div><div class="error" style="margin-top:40px" ng-show="errorInfo.server">{{errorInfo.server}}</div><div class="box-text" style="margin-top:90px"><input class="text" placeholder="邮箱" ng-model="submitInfo.email" ng-class="{\'error-alone\': errorInfo.email}" ng-blur="checkEmail()" ng-change="clearError(\'email\')"> <i class="ico ico-small eqf-envelope"></i></div><div id="captcha_box" class="geetest hide" eqd-geetest></div><div class="submit-container"><button id="submit" class="submit btn-geetest" ng-click="find()">找回</button></div><div class="go-login"><a href="login">我想起来了，去登录 ></a></div></div></div>'), e.put("app/find/findEmailResult.tpl.html", '<div class="eqc-view"><eqd-ad ad-info="adInfo"></eqd-ad><div class="eqc-form eqc-result"><div class="header"><a class="title" href="">重置密码</a></div><div class="info"><p style="margin-top:80px">密码重置链接已经发送到您的邮箱：</p><p class="data">{{email}}</p><p>赶快去登录邮箱重置密码吧！</p></div><div class="ok-container"><button class="ok" ng-click="close()">确定</button></div><div class="footer"><span>为了获得更好的使用，建议使用谷歌浏览器（chrome）</span></div></div></div>'), e.put("app/find/findMobile.tpl.html", '<div class="eqc-view"><eqd-ad ad-info="adInfo"></eqd-ad><div class="eqc-form" eqd-enter-submit="#submit"><div class="header"><a class="title" href="find/email">邮箱找回</a> </div><div class="error" style="margin-top:40px" ng-show="errorInfo.server">{{errorInfo.server}}</div><div class="box-text" style="margin-top:90px"><input class="text" placeholder="手机号" ng-model="submitInfo.phone" ng-class="{\'error-alone\': errorInfo.phone}" ng-blur="checkPhone()" ng-change="clearError(\'phone\')"> <i class="ico ico-big eqf-phone"></i></div><div class="box-text code"><input class="text" placeholder="手机收到的验证码" ng-model="submitInfo.code" ng-change="clearError(\'code\')"> <i class="ico eqf-key"></i></div><div class="sms-code-container" ng-show="!countInfo.count"><button class="sms-code btn-geetest" ng-click="getResetCode()">获得验证码</button></div><div class="sms-code-container" ng-show="countInfo.count"><button class="sms-code time">重新发送({{countInfo.count}})</button></div><div id="captcha_box" class="geetest hide" eqd-geetest></div><div class="submit-container"><button id="submit" class="submit btn-geetest" ng-click="find()">找回</button></div><div class="go-login"><a href="login">我想起来了，去登录 ></a></div></div></div>'), e.put("app/login/login.tpl.html", '<div class="eqc-view"><eqd-ad ad-info="adInfo"></eqd-ad><div class="eqc-form" eqd-enter-submit="#submit"><div class="header"><span class="title">登录</span></div><div class="error" style="margin-top:10px" ng-show="errorInfo.server">{{errorInfo.server}}</div><div class="box-text" style="margin-top:60px"><input class="text" id="input_username" placeholder="手机号/注册邮箱/用户名" eqd-stop-propagation="click" ng-model="submitInfo.username" ng-class="{\'error-alone\': errorInfo.username}" ng-focus="showUserInfo()" ng-keydown="hideUserInfo($event)" ng-change="clearError(\'username\')"> <i class="ico eqf-top-contact"></i></div><eqd-drop-down ng-if="userInfo.show" for="input_username" current="submitInfo.username" show="userInfo.show" list="userInfo.list"></eqd-drop-down><div class="box-text"><input class="text" placeholder="密码" onfocus=\'this.type="password"\' ng-model="submitInfo.password" ng-class="{\'error-alone\': errorInfo.password}" ng-change="clearError(\'password\')"> <i class="ico eqf-lock"></i></div><div class="remember"><eqd-input-checkbox data-id="remember_login" value="submitInfo.rememberMe"></eqd-input-checkbox><label for="remember_login">自动登录</label><a class="forget" href="find">忘记密码？</a></div><div id="captcha_box" ng-if="submitInfo.initGeetest" eqd-geetest></div><div class="submit-container"><button id="submit" class="submit btn-geetest" ng-click="login()">登录</button></div><center><div class="other-login" eqd-message-event> <button class="qq"  ng-click="loginOther(\'qq\')"><i class="eqf-qq"></i>QQ登录</button></div></center><div class="footer"><span>为了获得更好的使用，建议使用谷歌浏览器（chrome）</span></div></div></div>'), e.put("app/reset/reset.tpl.html", '<div class="eqc-view"><eqd-ad ad-info="adInfo"></eqd-ad><div class="eqc-form" eqd-enter-submit="#submit"><div class="header"><span class="title">重设密码</span></div><div class="error" style="margin-top:40px" ng-show="errorInfo.server">{{errorInfo.server}}</div><div class="box-text" style="margin-top:90px"><input class="text" placeholder="6-16个字符（英文字母或数字，区分大小写）" onfocus=\'this.type="password"\' ng-model="submitInfo.newPassword" ng-class="{\'error-alone\': errorInfo.newPassword}" ng-blur="checkNewPassword()" ng-change="clearError(\'newPassword\')"> <i class="ico eqf-lock"></i></div><div class="box-text"><input class="text" placeholder="再次输入新密码" onfocus=\'this.type="password"\' ng-model="submitInfo.repeatPassword" ng-class="{\'error-alone\': errorInfo.repeatPassword}" ng-blur="checkRepeatPassword()" ng-change="clearError(\'repeatPassword\')"> <i class="ico eqf-lock"></i></div><div class="submit-container"><button id="submit" class="submit" ng-click="reset()">确认</button></div><div class="go-login"><a href="login">我想起来了，去登录 ></a></div><div class="footer"><span>为了获得更好的使用，建议使用谷歌浏览器（chrome）</span></div></div></div>'), e.put("app/reset/resetResult.tpl.html", '<div class="eqc-view"><eqd-ad ad-info="adInfo"></eqd-ad><div class="eqc-form eqc-result"><div class="header"><a class="title" href="">重置密码</a></div><div class="symbol"><i class="eqf-yes"></i></div><div class="info"><p>重置成功</p></div><div class="ok-container"><button class="ok" ng-click="close()">确定</button></div><div class="footer"><span>为了获得更好的使用，建议使用谷歌浏览器（chrome）</span></div></div></div>'), e.put("common/directives/dropDown.tpl.html", '<div class="eqc-drop-down" ng-show="show"><div class="container"><ul class="scroll"><li ng-repeat="item in list track by $index" ng-click="selectItem(item)" ng-show="filter(item, $last)"><span class="text">{{item}}</span> <span class="delete" eqd-stop-propagation="click" ng-click="deleteItem(item, $index)">&times;</span></li></ul></div></div>'), e.put("app/register/registerEmail.tpl.html", '<div class="eqc-view"><eqd-ad ad-info="adInfo"></eqd-ad><div class="eqc-form" eqd-enter-submit="#submit"><div class="header"><a class="title" href="" ng-class="{active: registerInfo.type === 1}" ng-click="toggleRegister(1)">个人注册</a> </div><div class="error" style="margin-top:10px" ng-show="errorInfo.server">{{errorInfo.server}}</div><div class="box-text" style="margin-top:60px"><input class="text" placeholder="邮箱" ng-model="submitInfo.email" ng-class="{\'error-alone\': errorInfo.email}" ng-blur="checkEmail()" ng-change="clearError(\'email\')"> <i class="ico ico-small eqf-envelope"></i></div><div class="box-text"><input class="text" placeholder="6-16个字符（英文字母或数字，区分大小写）" onfocus=\'this.type="password"\' ng-model="submitInfo.password" ng-class="{\'error-alone\': errorInfo.password}" ng-blur="checkPassword()" ng-change="clearError(\'password\')"> <i class="ico eqf-lock"></i></div><div class="remember"><eqd-input-checkbox data-id="agree" value="submitInfo.agree"></eqd-input-checkbox><label for="agree" class="first">阅读并接受《注册协议》</label></div><div id="captcha_box" class="geetest" eqd-geetest></div><div class="submit-container" ng-class="{enterprise: registerInfo.type === 2}"><button id="submit" class="submit btn-geetest" ng-click="register()" eqd-message-event>注册</button></div></div></div>'), e.put("app/register/registerMobile.tpl.html", '<div class="eqc-view"><eqd-ad ad-info="adInfo"></eqd-ad><div class="eqc-form" eqd-enter-submit="#submit"><div class="header"><a class="title" href="" ng-class="{active: registerInfo.type === 1}" ng-click="toggleRegister(1)">个人注册</a> </div><div class="error" style="margin-top:10px" ng-show="errorInfo.server">{{errorInfo.server}}</div><div class="box-text" style="margin-top:60px"><input class="text" placeholder="手机号" ng-model="submitInfo.phone" ng-class="{\'error-alone\': errorInfo.phone}" ng-blur="checkPhone()" ng-change="clearError(\'phone\')"> <i class="ico ico-big eqf-phone"></i></div><div class="box-text code"><input class="text" placeholder="手机收到的验证码" ng-model="submitInfo.code" ng-class="{\'error-alone\': errorInfo.code}" ng-change="clearError(\'code\')"> <i class="ico eqf-key"></i></div><div class="sms-code-container" ng-show="!countInfo.count"><button class="sms-code btn-geetest" ng-click="getRegisterCode()">获得验证码</button></div><div class="sms-code-container" ng-show="countInfo.count"><button class="sms-code time">重新发送({{countInfo.count}})</button></div><div id="captcha_box" class="geetest hide" eqd-geetest></div><div class="box-text"><input class="text" placeholder="6-16个字符（英文字母或数字，区分大小写）" onfocus=\'this.type="password"\' ng-model="submitInfo.password" ng-class="{\'error-alone\': errorInfo.password}" ng-blur="checkPassword()" ng-change="clearError(\'password\')"> <i class="ico eqf-lock"></i></div><div class="remember"><eqd-input-checkbox data-id="agree" value="submitInfo.agree"></eqd-input-checkbox><label for="agree" class="first">阅读并接受《注册协议》</label></div><div class="submit-container" ng-class="{enterprise: registerInfo.type === 2}"><button id="submit" class="submit" ng-class="{enterprise: registerInfo.type === 2}" ng-click="register()">注册</button></div><div class="footer"><i class="ico ico-small eqf-envelope"></i> <a href="register/email">使用邮箱注册</a></div></div></div>')
}]);
angular.module("app.reset.resetCtrl", []).controller("resetCtrl", ["$scope", "$location", "$routeParams", "$q", "securityService", "checkService", "utilService", "authMessageType", "adService", function(e, r, s, a, n, o, t, c, w) {
	function d() {
		var e = P.repeatPassword === P.newPassword;
		return {
			valid: e,
			msg: e ? "" : "确认密码和新密码不一致"
		}
	}
	function i() {
		var e = o.checkPassword(P.newPassword);
		f.newPassword = f.server = e.msg;
		var r = d();
		return f.repeatPassword = f.server = r.msg, e.valid && r.valid
	}
	function u(e) {
		return l ? void 0 : (l = !0, n.resetPassword(e).then(function() {
			r.path("reset/result/")
		}, function(e) {
			return f.server = e.data.msg, a.reject(null)
		})["finally"](function() {
			l = !1
		}))
	}
	e.adInfo = w.getAdInfoWithLogin();
	var v = s.resetToken,
		P = e.submitInfo = {
			newPassword: "",
			repeatPassword: ""
		},
		f = e.errorInfo = {
			newPassword: "",
			repeatPassword: "",
			server: ""
		},
		l = !1;
	e.clearError = function(e) {
		f[e] = f.server = ""
	}, e.checkNewPassword = function() {
		var e = o.checkPassword(P.newPassword);
		f.newPassword = f.server = e.msg
	}, e.checkRepeatPassword = function() {
		var e = d();
		f.repeatPassword = f.server = e.msg
	}, e.reset = function() {
		var e = i();
		if (e) {
			var r = {
				newPwd: P.newPassword,
				key: v
			};
			u(r)
		}
	}
}]);
angular.module("app.reset.resetResultCtrl", []).controller("resetResultCtrl", ["$rootScope", "$scope", "adService", "utilService", "authMessageType", function(e, t, o, s, r) {
	t.adInfo = o.getAdInfoWithLogin(), t.close = function() {
		var e = {
			type: r.RESET
		};
		s.postMessageWithJson(e)
	}
}]);
angular.module("common.directives.ad", []).directive("eqdAd", ["$location", function(n) {
	function t(t) {
		t.toggle = function() {
			n.path(t.adInfo.btnPath)
		}
	}
	var a = '<div class="eqc-ad" ng-style="{background: adInfo.imageUrl}"><button class="btn-toggle" ng-click="toggle()">{{adInfo.btnName}}</button></div>';
	return {
		replace: !0,
		scope: {
			adInfo: "="
		},
		template: a,
		link: t
	}
}]);
angular.module("common.directives.dropDown", []).directive("eqdDropDown", ["$document", function(e) {
	function n(n, t) {
		var c = {},
			i = document.getElementById(n["for"]);
		t.on("$destroy", function() {
			e.off("click")
		}), n.selectItem = function(e) {
			i.focus(), n.current = e, n.show = !1
		}, n.deleteItem = function(e, t) {
			i.focus(), n.list.splice(t, 1), delete c[e], o(n, c)
		}, n.filter = function(e, t) {
			var i = e.indexOf(n.current) > -1;
			return i ? c[e] = !0 : delete c[e], t && o(n, c), i
		}, n.$watch("show", function(o) {
			o ? e.off("click").on("click", function() {
				n.$apply(function() {
					n.show = !1
				})
			}) : e.off("click")
		})
	}
	function o(e, n) {
		var o = Object.keys(n);
		e.show = !! o.length
	}
	return {
		scope: {
			"for": "@",
			show: "=",
			current: "=",
			list: "="
		},
		replace: !0,
		templateUrl: "common/directives/dropDown.tpl.html",
		link: n
	}
}]);
angular.module("common.directives.enterSubmit", []).directive("eqdEnterSubmit", function() {
	function e(e, n) {
		n.on("$destroy", function() {
			n.off("keyup")
		}), n.on("keyup", function(n) {
			13 === n.keyCode && document.querySelector(e.eqdEnterSubmit).click()
		})
	}
	return {
		scope: {
			eqdEnterSubmit: "@"
		},
		link: e
	}
});
angular.module("common.directives.geetest", []).directive("eqdGeetest", ["geetestService", function(e) {
	function t(t, r) {
		r.on("$destroy", function() {
			var t = document.querySelectorAll('div[id^="geetest"]');
			angular.element(t).remove();
			var r = document.querySelectorAll('script[src*="geetest.com"], link[href*="geetest.com"]');
			angular.element(r).remove(), e.destroyGeetest()
		}), e.initGeetest()
	}
	return {
		link: t
	}
}]);
angular.module("common.directives.inputCheckbox", []).directive("eqdInputCheckbox", ["$interpolate", function(e) {
	function a(a, i, c) {
		var l = e(c.id);
		i.find("input").attr("id", l(a.$parent))
	}
	var i = '<div class="eqc-input-checkbox" ng-class="{active: value}"><input type="checkbox" ng-model="value" ng-class="{inactive: allowed === false}" ng-disabled="allowed === false"/><i class="checkbox eqf-yes2"></i></div>';
	return {
		restrict: "E",
		template: i,
		replace: !0,
		link: a,
		scope: {
			value: "=",
			allowed: "="
		}
	}
}]);
angular.module("common.directives.inputRadio", []).directive("eqdInputRadio", ["$interpolate", function(e) {
	function a(a, l, i) {
		var t = e(i.id);
		l.find("input").attr("id", t(a.$parent))
	}
	var l = '<div class="eqc-input-checkbox" ng-class="{active: value == defaultValue}"><input type="radio" name="{{name}}" value="{{defaultValue}}" ng-model="value" ng-class="{inactive: allowed === false}" ng-disabled="allowed === false"/><i class="checkbox eqf-yes2"></i></div>';
	return {
		restrict: "E",
		template: l,
		replace: !0,
		link: a,
		scope: {
			name: "@",
			value: "=",
			allowed: "=",
			defaultValue: "@"
		}
	}
}]);
angular.module("common.directives.messageEvent", []).directive("eqdMessageEvent", ["$window", "loginOtherService", "authMessageType", function(e, t, n) {
	function s(s, r) {
		function a(s) {
			if (s.source !== e) try {
				var r = JSON.parse(s.data);
				switch (r.type) {
				case n.LOGIN_REDIRECT:
					t.setLoginRedirectParams(r.data)
				}
			} catch (a) {
				console.error(a)
			}
		}
		r.on("$destroy", function() {
			e.removeEventListener("message", a)
		}), e.removeEventListener("message", a), e.addEventListener("message", a)
	}
	return {
		link: s
	}
}]);
angular.module("common.directives.stopPropagation", []).directive("eqdStopPropagation", function() {
	function o(o, n, t) {
		n.on("$destroy", function() {
			n.off(t.eqdStopPropagation)
		}), n.on(t.eqdStopPropagation, function(o) {
			o.stopPropagation()
		})
	}
	return {
		link: o
	}
});
angular.module("common.services.adService", []).factory("adService", function() {
	function n() {
		return r
	}
	function e(n) {
		angular.extend(r, n)
	}
	function t() {
		return angular.extend(r, {
			imageUrl: "url(" + HOST_CDN + HOST_BASE + "/images/signin.png)",
			btnName: "注册",
			btnPath: "register"
		})
	}
	var r = {
		imageUrl: "",
		btnName: "",
		btnPath: ""
	};
	return {
		getAdInfo: n,
		setAdInfo: e,
		getAdInfoWithLogin: t
	}
});
angular.module("common.services.checkService", []).factory("checkService", ["$q", "securityService", function(e, n) {
	function c(e, n, c) {
		var r = n.test(e);
		return {
			valid: r,
			msg: r ? "" : c
		}
	}
	function r(e) {
		var n = /^1[34578][0-9]{9}$/;
		return c(e, n, "手机格式不正确")
	}
	function t(e) {
		var n = /^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$/;
		return c(e, n, "邮箱格式不正确")
	}
	function u(e) {
		var n = /^[a-zA-Z0-9]{6,16}$/;
		return c(e, n, "密码格式不正确")
	}
	function i(e, n) {
		var r = /./;
		return c(e, r, n + "不能为空")
	}
	function a(c) {
		if (o.indexOf(c) > -1) {
			var r = {
				data: {
					msg: "重复注册"
				}
			};
			return e.reject(r)
		}
		return n.checkUniqueness(c).then(null, function(n) {
			1006 === n.data.code && o.push(c), e.reject(null)
		})
	}
	var o = [];
	return {
		checkUniqueness: a,
		checkPhone: r,
		checkEmail: t,
		checkPassword: u,
		checkRequire: i
	}
}]);
angular.module("common.services.countdownService", []).factory("countdownService", ["$timeout", function(n) {
	function o(t, c) {
		t.count = c, c && n(function() {
			o(t, --c)
		}, 1e3)
	}
	return {
		setCount: o
	}
}]);
angular.module("common.services.geetestService", []).factory("geetestService", ["$http", "$window", function(e, t) {
	function n() {
		return r
	}
	function a() {
		return o
	}
	function c() {
		o = null, r.refresh()
	}
	function i() {
		r = null, o = null, t.initCaptcha = null, delete t.initCaptcha
	}
	function u(e) {
		s.product = e
	}
	function l() {
		return t.initCaptcha = function() {
			r = new Geetest(s, !0), r.appendTo("#captcha_box"), r.bindOn(".btn-geetest"), r.onSuccess(function() {
				o = r.getValidate()
			})
		}, e.jsonp("http://api.geetest.com/get.php?callback=initCaptcha")
	}
	var o = null,
		r = null,
		s = {
			gt: "1ebc844c9e3a8c23e2ea4b567a8afd2d",
			challenge: "19e9d723472a0dfb08f34398af28ada8",
			product: "popup",
			lang: "zh-cn"
		};
	return {
		initGeetest: l,
		getGeetest: n,
		destroyGeetest: i,
		getGeetestValidate: a,
		clearGeetestValidate: c,
		setGeetestProduct: u
	}
}]);
angular.module("common.services.loginQQService", []).factory("loginQQService", ["$http", "$window", "$q", function(e, t, n) {
	function o(e) {
		var t = "https://graph.qq.com/oauth2.0/authorize?",
			n = client_id,
			o = ["client_id=" + n, "redirect_uri=" + redirect_uri, "scope=get_user_info", "response_type=token", "state=QQ_STATE"];
		return t + o.join("&")
	}
	function r(o) {
		e.jsonp("https://graph.qq.com/oauth2.0/me?access_token=" + o);
		var r = n.defer();
		return t.callback = function(e) {
			r.resolve(e), t.callback = null, delete t.callback
		}, r.promise
	}
	function c(t) {
		return e.post(HOST_SERVER + "index.php?c=otherlogin", t)
	}
	return {
		getQQUrl: o,
		getQQOpenId: r,
		relateAccount: c
	}
}]);
angular.module("common.services.loginWeixinService", []).factory("loginWeixinService", ["$http", function(e) {
	function n(e) {
		var n = "https://open.weixin.qq.com/connect/qrconnect?",
			c = "wxc5f1bbae4bb93ced",
			t = ["appid=" + c, "redirect_uri=" + e, "scope=snsapi_login", "response_type=code", "state=WEXIN_STATE"];
		return n + t.join("&")
	}
	function c(n) {
		return e.post(HOST_SERVER + "eqs/relWechatAccount", n)
	}
	return {
		getWxUrl: n,
		relateAccount: c
	}
}]);
angular.module("common.services.securityService", []).factory("securityService", ["$http", function(e) {
	function r(r) {
		return e.post(HOST_SERVER + "index.php?c=user&a=login", r)
	}
	function t(r) {
		return e.get(HOST_SERVER_S1 + "index.php?c=user&a=checkN&username=" + r)
	}
	function n(r) {
		return e.post(HOST_SERVER + "index.php?c=user&a=register", r)
	}
	function s(r) {
		return e.post(HOST_SERVER + "eqs/phone/register", r)
	}
	function o(r) {
		return e.post(HOST_SERVER + "index.php?c=user&a=register/code", r)
	}
	function i(r) {
		return e.post(HOST_SERVER + "eqs/reset/code", r)
	}
	function u(r) {
		return e.post(HOST_SERVER + "index.php?c=user&a=forget_password", r)
	}
	function c(r) {
		return e.post(HOST_SERVER + "eqs/check/phone/code", r)
	}
	function S(r) {
		return e.post(HOST_SERVER + "index.php?c=user&a=reset_password", r)
	}
	return {
		login: r,
		checkUniqueness: t,
		registerByEmail: n,
		registerByMobile: s,
		getRegisterCode: o,
		getResetCode: i,
		findPasswordByEmail: u,
		findPasswordByMobile: c,
		resetPassword: S
	}
}]);
angular.module("common.services.utilService", []).factory("utilService", ["$window", function(e) {
	function s(s) {
		var t = JSON.stringify(s),
			r = "*",
			i = e.parent,
			n = e.opener;
		i && i.postMessage(t, r), n && n.postMessage(t, r)
	}
	return {
		postMessageWithJson: s
	}
}]).constant("authMessageType", {
	LOGIN: "login",
	LOGIN_REDIRECT: "loginRedirect",
	REGISTER: "register",
	REGISTER_ENTERPRISE: "registerEnterprise",
	RESET: "reset",
	CLOSE: "close"
});
angular.module("common.configs.httpInterceptor", []).config(["$httpProvider", function(t) {
	t.interceptors.push("httpInterceptor")
}]).factory("httpInterceptor", ["$q", function(t) {
	return {
		response: function(e) {
			var r = e.data = e.data || {};
			return r.success === !1 ? (1001 == r.code, r.msg = r.msg || "未提供错误信息", r.code = r.code || 500, t.reject(e)) : e
		},
		responseError: function(e) {
			return null === e.data && (e.data = {
				success: !1,
				code: 500,
				msg: "服务器未响应"
			}), 404 === e.status && (e.data = {
				success: !1,
				code: 404,
				msg: "服务器接口异常"
			}), t.reject(e)
		}
	}
}]);
angular.module("common.configs.httpRequest", []).config(["$httpProvider", "$httpParamSerializerProvider", function(t, e) {
	var n = e.$get(),
		r = "application/x-www-form-urlencoded";
	t.defaults.withCredentials = !0, t.defaults.headers.post["Content-Type"] = r, t.defaults.transformRequest.unshift(function(t, e) {
		return e("content-type") == r ? n(t) : t
	})
}]);
angular.module("common.configs.route", []).config(["$routeProvider", function(e) {
	e.when("/", {
		templateUrl: "app/login/login.tpl.html",
		controller: "loginCtrl"
	}).when("/login", {
		templateUrl: "app/login/login.tpl.html",
		controller: "loginCtrl"
	}).when("/login/other", {
		template: "",
		controller: "loginRedirectCtrl"
	}).when("/register", {
		templateUrl: "app/register/registerEmail.tpl.html",
		controller: "registerEmailCtrl"
	}).when("/register/mobile", {
		templateUrl: "app/register/registerMobile.tpl.html",
		controller: "registerMobileCtrl"
	}).when("/register/mobile/:type", {
		templateUrl: "app/register/registerMobile.tpl.html",
		controller: "registerMobileCtrl"
	}).when("/register/email", {
		templateUrl: "app/register/registerEmail.tpl.html",
		controller: "registerEmailCtrl"
	}).when("/register/email/:type", {
		templateUrl: "app/register/registerEmail.tpl.html",
		controller: "registerEmailCtrl"
	}).when("/find", {
		templateUrl: "app/find/findEmail.tpl.html",
		controller: "findEmailCtrl"
	}).when("/find/email", {
		templateUrl: "app/find/findEmail.tpl.html",
		controller: "findEmailCtrl"
	}).when("/find/email/:email", {
		templateUrl: "app/find/findEmailResult.tpl.html",
		controller: "findEmailResultCtrl"
	}).when("/find/mobile", {
		templateUrl: "app/find/findMobile.tpl.html",
		controller: "findMobileCtrl"
	}).when("/reset/result/", {
		templateUrl: "app/reset/resetResult.tpl.html",
		controller: "resetResultCtrl"
	}).when("/reset/:resetToken", {
		templateUrl: "app/reset/reset.tpl.html",
		controller: "resetCtrl"
	}).when("/error", {
		templateUrl: "app/error.tpl.html"
	}).otherwise({
		redirectTo: "/error"
	})
}]);
angular.module("common.config.template", []).config(["$provide", function(e) {
	e.decorator("$templateCache", ["$delegate", function(e) {
		var r = e.get;
		return e.get = function(e) {
			var t;
			if (t = r(e), !t) throw new Error("Wrong Template URL " + e);
			return t
		}, e
	}])
}]);
angular.module("app.register.registerEmailCtrl", []).controller("registerEmailCtrl", ["$rootScope", "$scope", "$q", "$routeParams", "loginOtherService", "securityService", "utilService", "checkService", "authMessageType", "geetestService", "registerService", "adService", function(e, r, a, t, s, i, n, o, c, l, g, u) {
	function v() {
		var e = o.checkEmail(h.email);
		if (w.email = w.server = e.msg, !e.valid) return !1;
		var r = o.checkPassword(h.password);
		if (w.password = w.server = r.msg, !r.valid) return !1;
		if (!h.agree) return w.server = "请阅读用户协议并接受", !1;
		var a = l.getGeetestValidate();
		return a ? !0 : (w.server = "图片验证码不能为空", !1)
	}
	function d() {
		var e = {
			email: h.email,
			password: h.password
		},
			r = l.getGeetestValidate();
		return angular.extend(e, r)
	}
	function f(e) {
		return E ? void 0 : (E = !0, i.registerByEmail(e).then(function(e) {
			var r = {
				type: 1 === y.type ? c.REGISTER : c.REGISTER_ENTERPRISE,
				data: e.data.obj
			};
			n.postMessageWithJson(r)
		}, function(e) {
			return m(e.data), a.reject(null)
		})["finally"](function() {
			E = !1, l.clearGeetestValidate()
		}))
	}
	function m(e) {
		var r = w.server = e.msg;
		switch (e.code) {
		case 1006:
		case 110203:
		case 110004:
			w.email = r;
			break;
		case 110002:
			w.password = r
		}
	}
	var p = t.type;
	p && g.setRegisterType(parseInt(p, 10));
	var h = r.submitInfo = {
		email: "",
		password: "",
		agree: !0
	},
		w = r.errorInfo = {
			email: "",
			password: "",
			server: ""
		},
		E = !1,
		y = r.registerInfo = g.getRegister();
	g.setRegisterType(y.type), r.adInfo = u.getAdInfo(), r.clearError = function(e) {
		w[e] = w.server = ""
	}, r.toggleRegister = function(e) {
		g.setRegisterType(e)
	}, r.checkEmail = function() {
		var e = o.checkEmail(h.email);
		w.email = w.server = e.msg, e.valid && o.checkUniqueness(h.email).then(function() {
			w.email = w.server = ""
		}, function(e) {
			m(e.data)
		})
	}, r.checkPassword = function() {
		var e = o.checkPassword(h.password);
		w.password = w.server = e.msg
	}, r.register = function() {
		var e = v();
		if (e) {
			var r = d();
			f(r)
		}
	}, r.loginOther = function(e) {
		s.openLoginWindow(e)
	}
}]);
angular.module("app.register.registerMobileCtrl", []).controller("registerMobileCtrl", ["$rootScope", "$scope", "$q", "$routeParams", "securityService", "geetestService", "loginOtherService", "countdownService", "utilService", "checkService", "authMessageType", "registerService", "adService", function(e, r, o, t, n, s, a, c, i, d, g, p, v) {
	function u() {
		var e = d.checkPhone(w.phone);
		if (R.phone = R.server = e.msg, !e.valid) return !1;
		var r = d.checkPassword(w.password);
		if (R.password = R.server = r.msg, !r.valid) return !1;
		var o = d.checkRequire(w.code, "验证码");
		return R.code = R.server = o.msg, o.valid ? w.agree ? !0 : (R.server = "请阅读用户协议并接受", !1) : !1
	}
	function h(e) {
		return k ? void 0 : (k = !0, n.registerByMobile(e).then(function(e) {
			var r = {
				type: 1 === y.type ? g.REGISTER : g.REGISTER_ENTERPRISE,
				data: e.data.obj
			};
			i.postMessageWithJson(r)
		}, function(e) {
			return f(e.data), o.reject(null)
		})["finally"](function() {
			k = !1, s.clearGeetestValidate()
		}))
	}
	function f(e) {
		var r = R.server = e.msg;
		switch (e.code) {
		case 1006:
		case 110007:
		case 110401:
			R.phone = r;
			break;
		case 110002:
			R.password = r;
			break;
		case 1018:
			R.code = r
		}
	}
	var l = t.type;
	l && p.setRegisterType(parseInt(l, 10));
	var w = r.submitInfo = {
		phone: "",
		code: "",
		password: "",
		agree: !0
	},
		R = r.errorInfo = {
			phone: "",
			password: "",
			code: "",
			server: ""
		},
		S = r.countInfo = {
			count: 0
		},
		k = !1,
		y = r.registerInfo = p.getRegister();
	p.setRegisterType(y.type), r.adInfo = v.getAdInfo(), r.clearError = function(e) {
		R[e] = R.server = ""
	}, r.toggleRegister = function(e) {
		p.setRegisterType(e)
	}, r.checkPhone = function() {
		var e = d.checkPhone(w.phone);
		R.phone = R.server = e.msg
	}, r.checkPassword = function() {
		var e = d.checkPassword(w.password);
		R.password = R.server = e.msg
	}, r.getRegisterCode = function() {
		var e = d.checkPhone(w.phone);
		if (R.phone = R.server = e.msg, e.valid) {
			var r = {
				phone: w.phone
			},
				o = s.getGeetestValidate();
			angular.extend(r, o), n.getRegisterCode(r).then(function() {
				c.setCount(S, 60)
			}, function(e) {
				f(e.data)
			})
		}
	}, r.register = function() {
		var e = u();
		if (e) {
			var r = {
				phone: w.phone,
				code: w.code,
				password: w.password
			};
			h(r)
		}
	}, r.loginOther = function(e) {
		a.openLoginWindow(e)
	}
}]);
angular.module("app.register.registerService", []).factory("registerService", ["adService", function(e) {
	function r() {
		return i
	}
	function t(r) {
		i.type = r;
		var t = "url(" + HOST_CDN + HOST_BASE,
			n = {
				btnName: "登录",
				btnPath: "login"
			};
		1 === r ? n.imageUrl = t + "/images/person.svg)" : 2 === r && (n.imageUrl = t + "/images/company.svg)"), e.setAdInfo(n)
	}
	var i = {
		type: 1
	};
	return {
		getRegister: r,
		setRegisterType: t
	}
}]);
